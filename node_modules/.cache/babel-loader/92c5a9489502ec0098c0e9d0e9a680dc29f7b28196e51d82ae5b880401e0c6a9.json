{"ast":null,"code":"var _jsxFileName = \"/Users/jaiyramananvijayaalayan/Documents/IIT 2nd Year/IIT L5 2nd SEM/SDGP/ScriptGenAI/src/components/UploadCard.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = initializeApp({\n  apiKey: \"AIzaSyAtMg9AKj4zJ8kOgC5IfvPAmGj-H3COEnc\",\n  authDomain: \"scriptgenai-fileupload.firebaseapp.com\",\n  projectId: \"scriptgenai-fileupload\",\n  storageBucket: \"scriptgenai-fileupload.appspot.com\",\n  messagingSenderId: \"436136312576\",\n  appId: \"1:436136312576:web:cfd9a8cf23913be5bc3de5\",\n  measurementId: \"G-JF996FE3GB\"\n});\nconst storage = getStorage(app);\nfunction App() {\n  _s();\n  // State to store uploaded file\n  const [file, setFile] = useState(\"\");\n\n  // progress\n  const [percent, setPercent] = useState(0);\n\n  // Handle file upload event and update state\n  function handleChange(event) {\n    setFile(event.target.files[0]);\n  }\n  const handleUpload = () => {\n    if (!file) {\n      alert(\"Please upload an image first!\");\n    }\n    const storageRef = ref(storage, `/files/${file.name}`);\n\n    // progress can be paused and resumed. It also exposes progress updates.\n    // Receives the storage reference and the file to upload.\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const percent = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n\n      // update progress\n      setPercent(percent);\n    }, err => console.log(err), () => {\n      // download url\n      getDownloadURL(uploadTask.snapshot.ref).then(url => {\n        console.log(url);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange,\n      accept: \"/image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload to Firebase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [percent, \" \\\"% done\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bOkrlUcUescwzr7rsDyXiAnIW/A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ref","uploadBytesResumable","getDownloadURL","initializeApp","getStorage","app","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","App","file","setFile","percent","setPercent","handleChange","event","target","files","handleUpload","alert","storageRef","name","uploadTask","on","snapshot","Math","round","bytesTransferred","totalBytes","err","console","log","then","url"],"sources":["/Users/jaiyramananvijayaalayan/Documents/IIT 2nd Year/IIT L5 2nd SEM/SDGP/ScriptGenAI/src/components/UploadCard.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyAtMg9AKj4zJ8kOgC5IfvPAmGj-H3COEnc\",\n  authDomain: \"scriptgenai-fileupload.firebaseapp.com\",\n  projectId: \"scriptgenai-fileupload\",\n  storageBucket: \"scriptgenai-fileupload.appspot.com\",\n  messagingSenderId: \"436136312576\",\n  appId: \"1:436136312576:web:cfd9a8cf23913be5bc3de5\",\n  measurementId: \"G-JF996FE3GB\"\n});\n\nconst storage = getStorage(app);\n\nfunction App() {\n  // State to store uploaded file\n  const [file, setFile] = useState(\"\");\n\n  // progress\n  const [percent, setPercent] = useState(0);\n\n  // Handle file upload event and update state\n  function handleChange(event) {\n    setFile(event.target.files[0]);\n  }\n\n  const handleUpload = () => {\n    if (!file) {\n      alert(\"Please upload an image first!\");\n    }\n\n    const storageRef = ref(storage, `/files/${file.name}`);\n\n    // progress can be paused and resumed. It also exposes progress updates.\n    // Receives the storage reference and the file to upload.\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const percent = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n\n        // update progress\n        setPercent(percent);\n      },\n      (err) => console.log(err),\n      () => {\n        // download url\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n          console.log(url);\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleChange} accept=\"/image/*\" />\n      <button onClick={handleUpload}>Upload to Firebase</button>\n      <p>{percent} \"% done\"</p>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,GAAG,EAAEC,oBAAoB,EAAEC,cAAc,QAAQ,kBAAkB;AAC5E,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,UAAU,QAAQ,kBAAkB;AAAC;AAE9C,MAAMC,GAAG,GAAGF,aAAa,CAAC;EACxBG,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EACnDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC,CAAC;AAEF,MAAMC,OAAO,GAAGT,UAAU,CAACC,GAAG,CAAC;AAE/B,SAASS,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;;EAEzC;EACA,SAASoB,YAAY,CAACC,KAAK,EAAE;IAC3BJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC;EAEA,MAAMC,YAAY,GAAG,MAAM;IACzB,IAAI,CAACR,IAAI,EAAE;MACTS,KAAK,CAAC,+BAA+B,CAAC;IACxC;IAEA,MAAMC,UAAU,GAAGzB,GAAG,CAACa,OAAO,EAAG,UAASE,IAAI,CAACW,IAAK,EAAC,CAAC;;IAEtD;IACA;IACA,MAAMC,UAAU,GAAG1B,oBAAoB,CAACwB,UAAU,EAAEV,IAAI,CAAC;IAEzDY,UAAU,CAACC,EAAE,CACX,eAAe,EACdC,QAAQ,IAAK;MACZ,MAAMZ,OAAO,GAAGa,IAAI,CAACC,KAAK,CACvBF,QAAQ,CAACG,gBAAgB,GAAGH,QAAQ,CAACI,UAAU,GAAI,GAAG,CACxD;;MAED;MACAf,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,EACAiB,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,EACzB,MAAM;MACJ;MACAhC,cAAc,CAACyB,UAAU,CAACE,QAAQ,CAAC7B,GAAG,CAAC,CAACqC,IAAI,CAAEC,GAAG,IAAK;QACpDH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC,CACF;EACH,CAAC;EAED,oBACE;IAAA,wBACE;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAEnB,YAAa;MAAC,MAAM,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/D;MAAQ,OAAO,EAAEI,YAAa;MAAA,UAAC;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAS,eAC1D;MAAA,WAAIN,OAAO,EAAC,aAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACrB;AAEV;AAAC,GAlDQH,GAAG;AAAA,KAAHA,GAAG;AAoDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}